import{_ as s,c as i,o as a,a2 as t}from"./chunks/framework.BV61Qrc0.js";const e="/assets/remix.1WNKHTws.png",y=JSON.parse('{"title":"编译运行","description":"","frontmatter":{},"headers":[],"relativePath":"solidity/proc.md","filePath":"solidity/proc.md"}'),n={name:"solidity/proc.md"},l=t('<h1 id="编译运行" tabindex="-1">编译运行 <a class="header-anchor" href="#编译运行" aria-label="Permalink to &quot;编译运行&quot;">​</a></h1><br><img src="'+e+`" width="600px" style=""><h2 id="_1-准备合约" tabindex="-1">1. 准备合约 <a class="header-anchor" href="#_1-准备合约" aria-label="Permalink to &quot;1. 准备合约&quot;">​</a></h2><div class="language-solidity vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">solidity</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">pragma</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> solidity</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ^0.8.4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">contract</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HelloWorld</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sayHello</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> pure</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> returns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> memory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hello World!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="_2-编译" tabindex="-1">2. 编译 <a class="header-anchor" href="#_2-编译" aria-label="Permalink to &quot;2. 编译&quot;">​</a></h2><p>在 <code>Compiler</code> 选项卡下，点击按钮，开始编译。</p><h2 id="_3-部署合约" tabindex="-1">3. 部署合约 <a class="header-anchor" href="#_3-部署合约" aria-label="Permalink to &quot;3. 部署合约&quot;">​</a></h2><p>在 <code>Run</code> 选项卡下，点击 <code>Deploy</code> 进行部署。</p><h2 id="_4-运行合约" tabindex="-1">4. 运行合约 <a class="header-anchor" href="#_4-运行合约" aria-label="Permalink to &quot;4. 运行合约&quot;">​</a></h2><p><code>Run</code> 选项卡下点击函数名字即可</p>`,11),h=[l];function p(r,o,d,k,c,_){return a(),i("div",null,h)}const g=s(n,[["render",p]]);export{y as __pageData,g as default};
