import{_ as e,c as o,o as a,a2 as d}from"./chunks/framework.BV61Qrc0.js";const u=JSON.parse('{"title":"前言","description":"","frontmatter":{},"headers":[],"relativePath":"solidity/readme.md","filePath":"solidity/readme.md"}'),c={name:"solidity/readme.md"},t=d('<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h1><p><code>Solidity</code> 是一种面向合约的编程语言，是以太坊虚拟机（<code>EVM</code>）上智能合约的开发语言之一，语法借鉴了 <code>Java</code>、<code>C++</code> 等语言。</p><h2 id="以太坊虚拟机是什么" tabindex="-1">以太坊虚拟机是什么 <a class="header-anchor" href="#以太坊虚拟机是什么" aria-label="Permalink to &quot;以太坊虚拟机是什么&quot;">​</a></h2><p>以太坊虚拟机（<code>Ethereum Virtual Machine，EVM</code>）是一个运行在以太坊网络中的虚拟机。是以太坊智能合约的核心部分，也是执行以太坊网络中所有智能合约的运行时环境。</p><p><code>EVM</code> 可以理解为一个运行于以太坊网络的虚拟计算机。智能合约编写完成后，需要使用 <code>Solidity</code> 编译器将合约代码转换成 <code>EVM</code> 可以理解和执行的字节码，然后通过交易发送到以太坊网络。智能合约在 <code>EVM</code> 上运行时，需要消耗一定的 <code>Gas</code>，这是一种以太币的单位，用来衡量执行合约操作的计算和存储成本。</p><h2 id="什么是智能合约" tabindex="-1">什么是智能合约 <a class="header-anchor" href="#什么是智能合约" aria-label="Permalink to &quot;什么是智能合约&quot;">​</a></h2><p>智能合约（<code>Smart Contract</code>）是是一组编程代码，可由开发人员使用一种或多种编程语言（例如<code>Solidity</code>）编写，并经过编译和部署。这些合约的主要目的是通过在区块链上执行代码来处理交易，并自动化执行带条件的交易。例如，当特定条件满足时，可以自动化执行转账。智能合约还可以用于管理数字资产，记录数据和控制访问权限等。</p><p>智能合约的执行需要消耗一定的费用，单位为 <code>Gas</code>，用于支付智能合约的计算和存储成本。每个<code>写操作</code>都需要消耗 <code>Gas</code>，且在交易执行前需要预测费用，以确保执行前有足够的费用。</p>',8),r=[t];function i(s,n,l,_,h,p){return a(),o("div",null,r)}const f=e(c,[["render",i]]);export{u as __pageData,f as default};
